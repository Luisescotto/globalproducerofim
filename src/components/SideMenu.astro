---
import { Icon } from "astro-icon/components";

import { getLangFromUrl, useTranslations } from "../i18n/utils";
import { getRelativeLocaleUrl } from "astro:i18n";
import LanguageSelector from "@/components/LanguageSelector.astro";

const lang = getLangFromUrl(Astro.url);
const t = useTranslations(lang);

const homeURL = getRelativeLocaleUrl(lang, "/");
const aboutURL = getRelativeLocaleUrl(lang, "about");
const productsURL = getRelativeLocaleUrl(lang, "products");
const contactURL = getRelativeLocaleUrl(lang, "contact");

const homeCleanURL = homeURL === "/" ? homeURL : homeURL.slice(0, -1);
---

<div
  class="bg-black/70 backdrop-blur-xs w-screen h-full z-50 fixed top-0 right-0 hidden cursor-pointer"
  id="side_menu_bg"
>
</div>
<aside
  class="flex flex-col items-start bg-white/60 backdrop-blur-sm text-white p-6 fixed top-0 -right-[500px] h-screen w-[270px] z-60 border-l-2 border-white transition-all"
  id="side_menu"
>
  <nav class="flex flex-col gap-4 pl-4 w-full">
    <button
      class="p-2 rounded-md hover:bg-primary self-end"
      id="side_menu_close"
    >
      <Icon name="close" size={32} />
    </button>
    <ul class="flex flex-col gap-4">
      <li>
        <a
          class="text-2xl text-title font-medium hover:bg-primary px-2 py-2 rounded"
          href={homeCleanURL}>{t("nav.home")}</a
        >
      </li>
      <li>
        <a
          class="text-2xl text-title font-medium hover:bg-primary px-2 py-2 rounded"
          href=`${aboutURL}`>{t("nav.about")}</a
        >
      </li>
      <li>
        <a
          class="text-2xl text-title font-medium hover:bg-primary px-2 py-2 rounded"
          href=`${productsURL}`>{t("nav.products")}</a
        >
      </li>
      <li>
        <a
          class="text-2xl text-title font-medium hover:bg-primary px-2 py-2 rounded"
          href=`${contactURL}`>{t("nav.contact")}</a
        >
      </li>
    </ul>
  </nav>

  <div class="pl-4 py-4">
    <LanguageSelector />
  </div>
</aside>

<script>
  import { isSideMenuOpen } from "@/store";
  const sideMenu = document.getElementById("side_menu");
  const side_menu_bg = document.getElementById("side_menu_bg");
  const sideMenuClose = document.getElementById("side_menu_close");

  isSideMenuOpen.subscribe((open) => {
    if (open) {
      sideMenu?.classList.remove("-right-[500px]");
      sideMenu?.classList.add("right-0");
      side_menu_bg?.classList.remove("hidden");
    }
    if (!open) {
      sideMenu?.classList.add("-right-[500px]");
      sideMenu?.classList.remove("right-0");
      side_menu_bg?.classList.add("hidden");
    }
  });

  function closeSideMenu() {
    isSideMenuOpen.set(false);
  }

  sideMenuClose?.addEventListener("click", closeSideMenu);
  side_menu_bg?.addEventListener("click", closeSideMenu);
</script>
